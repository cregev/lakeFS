// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/treeverse/lakefs/api/gen/models"
)

// CreateRepositoryCreatedCode is the HTTP code returned for type CreateRepositoryCreated
const CreateRepositoryCreatedCode int = 201

/*CreateRepositoryCreated repository

swagger:response createRepositoryCreated
*/
type CreateRepositoryCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Repository `json:"body,omitempty"`
}

// NewCreateRepositoryCreated creates CreateRepositoryCreated with default headers values
func NewCreateRepositoryCreated() *CreateRepositoryCreated {

	return &CreateRepositoryCreated{}
}

// WithPayload adds the payload to the create repository created response
func (o *CreateRepositoryCreated) WithPayload(payload *models.Repository) *CreateRepositoryCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create repository created response
func (o *CreateRepositoryCreated) SetPayload(payload *models.Repository) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateRepositoryCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateRepositoryBadRequestCode is the HTTP code returned for type CreateRepositoryBadRequest
const CreateRepositoryBadRequestCode int = 400

/*CreateRepositoryBadRequest validation error

swagger:response createRepositoryBadRequest
*/
type CreateRepositoryBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateRepositoryBadRequest creates CreateRepositoryBadRequest with default headers values
func NewCreateRepositoryBadRequest() *CreateRepositoryBadRequest {

	return &CreateRepositoryBadRequest{}
}

// WithPayload adds the payload to the create repository bad request response
func (o *CreateRepositoryBadRequest) WithPayload(payload *models.Error) *CreateRepositoryBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create repository bad request response
func (o *CreateRepositoryBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateRepositoryBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateRepositoryUnauthorizedCode is the HTTP code returned for type CreateRepositoryUnauthorized
const CreateRepositoryUnauthorizedCode int = 401

/*CreateRepositoryUnauthorized Unauthorized

swagger:response createRepositoryUnauthorized
*/
type CreateRepositoryUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateRepositoryUnauthorized creates CreateRepositoryUnauthorized with default headers values
func NewCreateRepositoryUnauthorized() *CreateRepositoryUnauthorized {

	return &CreateRepositoryUnauthorized{}
}

// WithPayload adds the payload to the create repository unauthorized response
func (o *CreateRepositoryUnauthorized) WithPayload(payload *models.Error) *CreateRepositoryUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create repository unauthorized response
func (o *CreateRepositoryUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateRepositoryUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateRepositoryDefault generic error response

swagger:response createRepositoryDefault
*/
type CreateRepositoryDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateRepositoryDefault creates CreateRepositoryDefault with default headers values
func NewCreateRepositoryDefault(code int) *CreateRepositoryDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateRepositoryDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create repository default response
func (o *CreateRepositoryDefault) WithStatusCode(code int) *CreateRepositoryDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create repository default response
func (o *CreateRepositoryDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create repository default response
func (o *CreateRepositoryDefault) WithPayload(payload *models.Error) *CreateRepositoryDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create repository default response
func (o *CreateRepositoryDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateRepositoryDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
