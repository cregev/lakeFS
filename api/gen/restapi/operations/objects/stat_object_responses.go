// Code generated by go-swagger; DO NOT EDIT.

package objects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/treeverse/lakefs/api/gen/models"
)

// StatObjectOKCode is the HTTP code returned for type StatObjectOK
const StatObjectOKCode int = 200

/*StatObjectOK object metadata

swagger:response statObjectOK
*/
type StatObjectOK struct {

	/*
	  In: Body
	*/
	Payload *models.ObjectStats `json:"body,omitempty"`
}

// NewStatObjectOK creates StatObjectOK with default headers values
func NewStatObjectOK() *StatObjectOK {

	return &StatObjectOK{}
}

// WithPayload adds the payload to the stat object o k response
func (o *StatObjectOK) WithPayload(payload *models.ObjectStats) *StatObjectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the stat object o k response
func (o *StatObjectOK) SetPayload(payload *models.ObjectStats) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StatObjectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// StatObjectUnauthorizedCode is the HTTP code returned for type StatObjectUnauthorized
const StatObjectUnauthorizedCode int = 401

/*StatObjectUnauthorized Unauthorized

swagger:response statObjectUnauthorized
*/
type StatObjectUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewStatObjectUnauthorized creates StatObjectUnauthorized with default headers values
func NewStatObjectUnauthorized() *StatObjectUnauthorized {

	return &StatObjectUnauthorized{}
}

// WithPayload adds the payload to the stat object unauthorized response
func (o *StatObjectUnauthorized) WithPayload(payload *models.Error) *StatObjectUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the stat object unauthorized response
func (o *StatObjectUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StatObjectUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// StatObjectNotFoundCode is the HTTP code returned for type StatObjectNotFound
const StatObjectNotFoundCode int = 404

/*StatObjectNotFound path or branch not found

swagger:response statObjectNotFound
*/
type StatObjectNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewStatObjectNotFound creates StatObjectNotFound with default headers values
func NewStatObjectNotFound() *StatObjectNotFound {

	return &StatObjectNotFound{}
}

// WithPayload adds the payload to the stat object not found response
func (o *StatObjectNotFound) WithPayload(payload *models.Error) *StatObjectNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the stat object not found response
func (o *StatObjectNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StatObjectNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*StatObjectDefault generic error response

swagger:response statObjectDefault
*/
type StatObjectDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewStatObjectDefault creates StatObjectDefault with default headers values
func NewStatObjectDefault(code int) *StatObjectDefault {
	if code <= 0 {
		code = 500
	}

	return &StatObjectDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the stat object default response
func (o *StatObjectDefault) WithStatusCode(code int) *StatObjectDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the stat object default response
func (o *StatObjectDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the stat object default response
func (o *StatObjectDefault) WithPayload(payload *models.Error) *StatObjectDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the stat object default response
func (o *StatObjectDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StatObjectDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
