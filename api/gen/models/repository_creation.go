// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RepositoryCreation repository creation
// swagger:model repository_creation
type RepositoryCreation struct {

	// bucket name
	// Required: true
	BucketName *string `json:"bucket_name"`

	// default branch
	DefaultBranch string `json:"default_branch,omitempty"`

	// id
	// Required: true
	ID *string `json:"id"`
}

// Validate validates this repository creation
func (m *RepositoryCreation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBucketName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RepositoryCreation) validateBucketName(formats strfmt.Registry) error {

	if err := validate.Required("bucket_name", "body", m.BucketName); err != nil {
		return err
	}

	return nil
}

func (m *RepositoryCreation) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RepositoryCreation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RepositoryCreation) UnmarshalBinary(b []byte) error {
	var res RepositoryCreation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
