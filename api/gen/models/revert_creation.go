// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RevertCreation revert creation
// swagger:model revert_creation
type RevertCreation struct {

	// commit
	Commit string `json:"commit,omitempty"`

	// path
	Path string `json:"path,omitempty"`

	// type
	// Required: true
	// Enum: [OBJECT TREE COMMIT RESET]
	Type *string `json:"type"`
}

// Validate validates this revert creation
func (m *RevertCreation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var revertCreationTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["OBJECT","TREE","COMMIT","RESET"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		revertCreationTypeTypePropEnum = append(revertCreationTypeTypePropEnum, v)
	}
}

const (

	// RevertCreationTypeOBJECT captures enum value "OBJECT"
	RevertCreationTypeOBJECT string = "OBJECT"

	// RevertCreationTypeTREE captures enum value "TREE"
	RevertCreationTypeTREE string = "TREE"

	// RevertCreationTypeCOMMIT captures enum value "COMMIT"
	RevertCreationTypeCOMMIT string = "COMMIT"

	// RevertCreationTypeRESET captures enum value "RESET"
	RevertCreationTypeRESET string = "RESET"
)

// prop value enum
func (m *RevertCreation) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, revertCreationTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *RevertCreation) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RevertCreation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RevertCreation) UnmarshalBinary(b []byte) error {
	var res RevertCreation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
