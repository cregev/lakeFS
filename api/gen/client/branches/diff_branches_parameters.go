// Code generated by go-swagger; DO NOT EDIT.

package branches

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDiffBranchesParams creates a new DiffBranchesParams object
// with the default values initialized.
func NewDiffBranchesParams() *DiffBranchesParams {
	var ()
	return &DiffBranchesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDiffBranchesParamsWithTimeout creates a new DiffBranchesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDiffBranchesParamsWithTimeout(timeout time.Duration) *DiffBranchesParams {
	var ()
	return &DiffBranchesParams{

		timeout: timeout,
	}
}

// NewDiffBranchesParamsWithContext creates a new DiffBranchesParams object
// with the default values initialized, and the ability to set a context for a request
func NewDiffBranchesParamsWithContext(ctx context.Context) *DiffBranchesParams {
	var ()
	return &DiffBranchesParams{

		Context: ctx,
	}
}

// NewDiffBranchesParamsWithHTTPClient creates a new DiffBranchesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDiffBranchesParamsWithHTTPClient(client *http.Client) *DiffBranchesParams {
	var ()
	return &DiffBranchesParams{
		HTTPClient: client,
	}
}

/*DiffBranchesParams contains all the parameters to send to the API endpoint
for the diff branches operation typically these are written to a http.Request
*/
type DiffBranchesParams struct {

	/*BranchID*/
	BranchID string
	/*OtherBranchID*/
	OtherBranchID string
	/*RepositoryID*/
	RepositoryID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the diff branches params
func (o *DiffBranchesParams) WithTimeout(timeout time.Duration) *DiffBranchesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the diff branches params
func (o *DiffBranchesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the diff branches params
func (o *DiffBranchesParams) WithContext(ctx context.Context) *DiffBranchesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the diff branches params
func (o *DiffBranchesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the diff branches params
func (o *DiffBranchesParams) WithHTTPClient(client *http.Client) *DiffBranchesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the diff branches params
func (o *DiffBranchesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBranchID adds the branchID to the diff branches params
func (o *DiffBranchesParams) WithBranchID(branchID string) *DiffBranchesParams {
	o.SetBranchID(branchID)
	return o
}

// SetBranchID adds the branchId to the diff branches params
func (o *DiffBranchesParams) SetBranchID(branchID string) {
	o.BranchID = branchID
}

// WithOtherBranchID adds the otherBranchID to the diff branches params
func (o *DiffBranchesParams) WithOtherBranchID(otherBranchID string) *DiffBranchesParams {
	o.SetOtherBranchID(otherBranchID)
	return o
}

// SetOtherBranchID adds the otherBranchId to the diff branches params
func (o *DiffBranchesParams) SetOtherBranchID(otherBranchID string) {
	o.OtherBranchID = otherBranchID
}

// WithRepositoryID adds the repositoryID to the diff branches params
func (o *DiffBranchesParams) WithRepositoryID(repositoryID string) *DiffBranchesParams {
	o.SetRepositoryID(repositoryID)
	return o
}

// SetRepositoryID adds the repositoryId to the diff branches params
func (o *DiffBranchesParams) SetRepositoryID(repositoryID string) {
	o.RepositoryID = repositoryID
}

// WriteToRequest writes these params to a swagger request
func (o *DiffBranchesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param branchId
	if err := r.SetPathParam("branchId", o.BranchID); err != nil {
		return err
	}

	// path param otherBranchId
	if err := r.SetPathParam("otherBranchId", o.OtherBranchID); err != nil {
		return err
	}

	// path param repositoryId
	if err := r.SetPathParam("repositoryId", o.RepositoryID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
