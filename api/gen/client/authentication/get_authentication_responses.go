// Code generated by go-swagger; DO NOT EDIT.

package authentication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/treeverse/lakefs/api/gen/models"
)

// GetAuthenticationReader is a Reader for the GetAuthentication structure.
type GetAuthenticationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthenticationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuthenticationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAuthenticationOK creates a GetAuthenticationOK with default headers values
func NewGetAuthenticationOK() *GetAuthenticationOK {
	return &GetAuthenticationOK{}
}

/*GetAuthenticationOK handles this case with default header values.

authentication successful
*/
type GetAuthenticationOK struct {
	Payload *GetAuthenticationOKBody
}

func (o *GetAuthenticationOK) Error() string {
	return fmt.Sprintf("[GET /authentication][%d] getAuthenticationOK  %+v", 200, o.Payload)
}

func (o *GetAuthenticationOK) GetPayload() *GetAuthenticationOKBody {
	return o.Payload
}

func (o *GetAuthenticationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAuthenticationOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetAuthenticationOKBody get authentication o k body
swagger:model GetAuthenticationOKBody
*/
type GetAuthenticationOKBody struct {

	// user
	User *models.User `json:"user,omitempty"`
}

// Validate validates this get authentication o k body
func (o *GetAuthenticationOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateUser(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAuthenticationOKBody) validateUser(formats strfmt.Registry) error {

	if swag.IsZero(o.User) { // not required
		return nil
	}

	if o.User != nil {
		if err := o.User.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAuthenticationOK" + "." + "user")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAuthenticationOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAuthenticationOKBody) UnmarshalBinary(b []byte) error {
	var res GetAuthenticationOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
