// Code generated by go-swagger; DO NOT EDIT.

package repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/treeverse/lakefs/api/gen/models"
)

// CreateRepositoryReader is a Reader for the CreateRepository structure.
type CreateRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateRepositoryCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateRepositoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateRepositoryDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateRepositoryCreated creates a CreateRepositoryCreated with default headers values
func NewCreateRepositoryCreated() *CreateRepositoryCreated {
	return &CreateRepositoryCreated{}
}

/*CreateRepositoryCreated handles this case with default header values.

repository
*/
type CreateRepositoryCreated struct {
	Payload *models.Repository
}

func (o *CreateRepositoryCreated) Error() string {
	return fmt.Sprintf("[POST /repositories][%d] createRepositoryCreated  %+v", 201, o.Payload)
}

func (o *CreateRepositoryCreated) GetPayload() *models.Repository {
	return o.Payload
}

func (o *CreateRepositoryCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Repository)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRepositoryBadRequest creates a CreateRepositoryBadRequest with default headers values
func NewCreateRepositoryBadRequest() *CreateRepositoryBadRequest {
	return &CreateRepositoryBadRequest{}
}

/*CreateRepositoryBadRequest handles this case with default header values.

validation error
*/
type CreateRepositoryBadRequest struct {
	Payload *models.Error
}

func (o *CreateRepositoryBadRequest) Error() string {
	return fmt.Sprintf("[POST /repositories][%d] createRepositoryBadRequest  %+v", 400, o.Payload)
}

func (o *CreateRepositoryBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateRepositoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRepositoryUnauthorized creates a CreateRepositoryUnauthorized with default headers values
func NewCreateRepositoryUnauthorized() *CreateRepositoryUnauthorized {
	return &CreateRepositoryUnauthorized{}
}

/*CreateRepositoryUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateRepositoryUnauthorized struct {
	Payload *models.Error
}

func (o *CreateRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[POST /repositories][%d] createRepositoryUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateRepositoryUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRepositoryDefault creates a CreateRepositoryDefault with default headers values
func NewCreateRepositoryDefault(code int) *CreateRepositoryDefault {
	return &CreateRepositoryDefault{
		_statusCode: code,
	}
}

/*CreateRepositoryDefault handles this case with default header values.

generic error response
*/
type CreateRepositoryDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the create repository default response
func (o *CreateRepositoryDefault) Code() int {
	return o._statusCode
}

func (o *CreateRepositoryDefault) Error() string {
	return fmt.Sprintf("[POST /repositories][%d] createRepository default  %+v", o._statusCode, o.Payload)
}

func (o *CreateRepositoryDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateRepositoryDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
