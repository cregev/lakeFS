// Code generated by go-swagger; DO NOT EDIT.

package objects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/treeverse/lakefs/api/gen/models"
)

// UploadObjectReader is a Reader for the UploadObject structure.
type UploadObjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadObjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUploadObjectCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUploadObjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUploadObjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUploadObjectDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUploadObjectCreated creates a UploadObjectCreated with default headers values
func NewUploadObjectCreated() *UploadObjectCreated {
	return &UploadObjectCreated{}
}

/*UploadObjectCreated handles this case with default header values.

object metadata
*/
type UploadObjectCreated struct {
	Payload *models.ObjectStats
}

func (o *UploadObjectCreated) Error() string {
	return fmt.Sprintf("[POST /repositories/{repositoryId}/branches/{branchId}/objects][%d] uploadObjectCreated  %+v", 201, o.Payload)
}

func (o *UploadObjectCreated) GetPayload() *models.ObjectStats {
	return o.Payload
}

func (o *UploadObjectCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ObjectStats)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadObjectUnauthorized creates a UploadObjectUnauthorized with default headers values
func NewUploadObjectUnauthorized() *UploadObjectUnauthorized {
	return &UploadObjectUnauthorized{}
}

/*UploadObjectUnauthorized handles this case with default header values.

Unauthorized
*/
type UploadObjectUnauthorized struct {
	Payload *models.Error
}

func (o *UploadObjectUnauthorized) Error() string {
	return fmt.Sprintf("[POST /repositories/{repositoryId}/branches/{branchId}/objects][%d] uploadObjectUnauthorized  %+v", 401, o.Payload)
}

func (o *UploadObjectUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UploadObjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadObjectNotFound creates a UploadObjectNotFound with default headers values
func NewUploadObjectNotFound() *UploadObjectNotFound {
	return &UploadObjectNotFound{}
}

/*UploadObjectNotFound handles this case with default header values.

repository or branch not found
*/
type UploadObjectNotFound struct {
	Payload *models.Error
}

func (o *UploadObjectNotFound) Error() string {
	return fmt.Sprintf("[POST /repositories/{repositoryId}/branches/{branchId}/objects][%d] uploadObjectNotFound  %+v", 404, o.Payload)
}

func (o *UploadObjectNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UploadObjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadObjectDefault creates a UploadObjectDefault with default headers values
func NewUploadObjectDefault(code int) *UploadObjectDefault {
	return &UploadObjectDefault{
		_statusCode: code,
	}
}

/*UploadObjectDefault handles this case with default header values.

generic error response
*/
type UploadObjectDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the upload object default response
func (o *UploadObjectDefault) Code() int {
	return o._statusCode
}

func (o *UploadObjectDefault) Error() string {
	return fmt.Sprintf("[POST /repositories/{repositoryId}/branches/{branchId}/objects][%d] uploadObject default  %+v", o._statusCode, o.Payload)
}

func (o *UploadObjectDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *UploadObjectDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
