// Code generated by go-swagger; DO NOT EDIT.

package objects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/treeverse/lakefs/api/gen/models"
)

// DeleteObjectReader is a Reader for the DeleteObject structure.
type DeleteObjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteObjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteObjectNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteObjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteObjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteObjectDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteObjectNoContent creates a DeleteObjectNoContent with default headers values
func NewDeleteObjectNoContent() *DeleteObjectNoContent {
	return &DeleteObjectNoContent{}
}

/*DeleteObjectNoContent handles this case with default header values.

object deleted successfully
*/
type DeleteObjectNoContent struct {
}

func (o *DeleteObjectNoContent) Error() string {
	return fmt.Sprintf("[DELETE /repositories/{repositoryId}/branches/{branchId}/objects][%d] deleteObjectNoContent ", 204)
}

func (o *DeleteObjectNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteObjectUnauthorized creates a DeleteObjectUnauthorized with default headers values
func NewDeleteObjectUnauthorized() *DeleteObjectUnauthorized {
	return &DeleteObjectUnauthorized{}
}

/*DeleteObjectUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteObjectUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteObjectUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /repositories/{repositoryId}/branches/{branchId}/objects][%d] deleteObjectUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteObjectUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteObjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteObjectNotFound creates a DeleteObjectNotFound with default headers values
func NewDeleteObjectNotFound() *DeleteObjectNotFound {
	return &DeleteObjectNotFound{}
}

/*DeleteObjectNotFound handles this case with default header values.

path or branch not found
*/
type DeleteObjectNotFound struct {
	Payload *models.Error
}

func (o *DeleteObjectNotFound) Error() string {
	return fmt.Sprintf("[DELETE /repositories/{repositoryId}/branches/{branchId}/objects][%d] deleteObjectNotFound  %+v", 404, o.Payload)
}

func (o *DeleteObjectNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteObjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteObjectDefault creates a DeleteObjectDefault with default headers values
func NewDeleteObjectDefault(code int) *DeleteObjectDefault {
	return &DeleteObjectDefault{
		_statusCode: code,
	}
}

/*DeleteObjectDefault handles this case with default header values.

generic error response
*/
type DeleteObjectDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete object default response
func (o *DeleteObjectDefault) Code() int {
	return o._statusCode
}

func (o *DeleteObjectDefault) Error() string {
	return fmt.Sprintf("[DELETE /repositories/{repositoryId}/branches/{branchId}/objects][%d] deleteObject default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteObjectDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteObjectDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
